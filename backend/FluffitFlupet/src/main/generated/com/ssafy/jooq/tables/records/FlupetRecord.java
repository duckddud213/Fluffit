/*
 * This file is generated by jOOQ.
 */
package com.ssafy.jooq.tables.records;


import com.ssafy.jooq.tables.Flupet;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlupetRecord extends UpdatableRecordImpl<FlupetRecord> implements Record4<UInteger, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>flupet_service.flupet.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>flupet_service.flupet.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>flupet_service.flupet.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>flupet_service.flupet.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>flupet_service.flupet.img_url</code>.
     */
    public void setImgUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>flupet_service.flupet.img_url</code>.
     */
    public String getImgUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>flupet_service.flupet.stage</code>.
     */
    public void setStage(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>flupet_service.flupet.stage</code>.
     */
    public Integer getStage() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UInteger, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UInteger, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Flupet.FLUPET.ID;
    }

    @Override
    public Field<String> field2() {
        return Flupet.FLUPET.NAME;
    }

    @Override
    public Field<String> field3() {
        return Flupet.FLUPET.IMG_URL;
    }

    @Override
    public Field<Integer> field4() {
        return Flupet.FLUPET.STAGE;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getImgUrl();
    }

    @Override
    public Integer component4() {
        return getStage();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getImgUrl();
    }

    @Override
    public Integer value4() {
        return getStage();
    }

    @Override
    public FlupetRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public FlupetRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public FlupetRecord value3(String value) {
        setImgUrl(value);
        return this;
    }

    @Override
    public FlupetRecord value4(Integer value) {
        setStage(value);
        return this;
    }

    @Override
    public FlupetRecord values(UInteger value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FlupetRecord
     */
    public FlupetRecord() {
        super(Flupet.FLUPET);
    }

    /**
     * Create a detached, initialised FlupetRecord
     */
    public FlupetRecord(UInteger id, String name, String imgUrl, Integer stage) {
        super(Flupet.FLUPET);

        setId(id);
        setName(name);
        setImgUrl(imgUrl);
        setStage(stage);
    }
}
