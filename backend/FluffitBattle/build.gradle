plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//		mavenBom "org.springframework.data:spring-data-r2dbc:1.6.1"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	//spring cloud config로 부터 설정 정보를 (동적으로)받아오기 위해서 필요
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

//	implementation 'org.springdoc:springdoc-openapi-starter-common:2.3.0'
//	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// mariaDB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis:2.6.3'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

//	// r2dbc........
//	implementation("org.springframework.boot.experimental:spring-boot-starter-data-r2dbc")
//	implementation 'org.mariadb:r2dbc-mariadb'
	implementation("org.springframework.boot:spring-boot-starter-webflux") // sse
//	testImplementation("org.springframework.boot.experimental:spring-boot-test-autoconfigure-r2dbc")
//	testImplementation("io.projectreactor:reactor-test")
}

tasks.named('test') {
	useJUnitPlatform()
}
